heat_template_version: 2015-04-30

description: Configure hieradata overrides for specific nodes

parameters:
  server:
    description: ID of the controller node to apply this config to
    type: string

  # Config specific parameters, to be provided via parameter_defaults
  # This would be a lookup of the node UUID as provided by dmidecode
  # to the json required for the node-specific hieradata
  # Note this needs to be a json blob e.g:
  #      parameter_defaults:
  #        NodeDataLookup: |
  #          {"AB4114B1-9C9D-409A-BEFB-D88C151BF2C3": {"foo": "bar"},
  #           "8CF1A7EA-7B4B-4433-AC83-17675514B1B8": {"foo2": "bar2"}}
  NodeDataLookup:
    type: string
    default: ''
    description: json string containing per-node configuration map
  DeployIdentifier:
    type: string

resources:
#  NodeSpecificConfig:
#    type: OS::Heat::SoftwareConfig
#    properties:
#      group: script
#      inputs:
#      - name: node_lookup
#      config: |
#        #!/bin/sh
#        node_id=$(dmidecode --s system-uuid)
#
#        # Create a /etc/puppet/hieradata/UUID.json file to provide
#        # the data of the NodeDataLookup parameter that matches the
#        # system UUID
#        echo $node_lookup | python -c "
#        import json
#        import sys
#        input = sys.stdin.readline() or '{}'
#        cnt = json.loads(input)
#        print json.dumps(cnt.get('${node_id}', {}))
#        " > /etc/puppet/hieradata/${node_id}.json

#  NodeSpecificDeployment:
#    type: OS::Heat::SoftwareDeployment
#    properties:
#      name: NodeSpecificDeployment
#      config: {get_resource: NodeSpecificConfig}
#      server: {get_param: server}
#      input_values:
#        node_lookup: {get_param: NodeDataLookup}
  ExtraPreConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
          #!/bin/sh
          cat >/etc/yum.repos.d/localrepo.repo <<EOF
          [rhel-7-server-rpms]
          name=Local rhel-7-server
          baseurl=http://172.28.184.14/rhel-7-server-rpms/
          enabled=1
          gpgcheck=0
          proxy=_none_
          [rhel-7-server-extras-rpms]
          name=Local rhel-7-server-extras
          baseurl=http://172.28.184.14/rhel-7-server-extras-rpms/
          enabled=1
          gpgcheck=0
          proxy=_none_
          [rhel-7-server-rh-common-rpms]
          name=Local rhel-7-server-rh-common
          baseurl=http://172.28.184.14/rhel-7-server-rh-common-rpms/
          enabled=1
          gpgcheck=0
          proxy=_none_
          [rhel-ha-for-rhel-7-server-rpms]
          name=Local rhel-ha-for-rhel-7-server
          baseurl=http://172.28.184.14/rhel-ha-for-rhel-7-server-rpms/
          enabled=1
          gpgcheck=0
          proxy=_none_
          [rhel-7-server-rhceph-3-tools-rpms]
          name=Local rhel-7-server-rhceph-3-tools
          baseurl=http://172.28.184.14/rhel-7-server-rhceph-3-tools-rpms/
          enabled=1
          gpgcheck=0
          proxy=_none_
          [osp13repo]
          name=Local osp 13 repo
          baseurl=http://172.28.184.14/osp13repo/
          enabled=1
          gpgcheck=0
          proxy=_none_
          EOF
            
  ExtraPreDeployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      config: {get_resource: ExtraPreConfig}
      server: {get_param: server}
      actions: ['CREATE','UPDATE']
      input_values:
        deploy_identifier: {get_param: DeployIdentifier}

outputs:
  deploy_stdout:
    description: Deployment reference, used to trigger puppet apply on changes
    #value: {get_attr: [ExtraPreDeployment, NodeSpecificDeployment, deploy_stdout]}
    value: {get_attr: [ExtraPreDeployment, deploy_stdout]}


