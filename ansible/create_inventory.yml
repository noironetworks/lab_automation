---
- name: create inventory hosts to run new_cmds
  hosts: localhost
  connection: local

  tasks:
    - debug:
        msg: "System {{ inventory_hostname }} has address {{ ansible_default_ipv4.address }}"
      when: ansible_default_ipv4.address is defined

    - set_fact:
        undercloud_type: "{{ undercloud_type }}"
        undercloud_ip: "{{ undercloud_ip }}"
        undercloud_password: "noir0123"
        user: "{% if undercloud_type == 'director' %}stack{% else %}noiro{% endif %}"

    - include_role:
         name: prerequisite

    - name: getting controller ip
      shell: ssh -o StrictHostKeyChecking=no {{ user}}@{{ undercloud_ip }} "source /home/{{user}}/stackrc && nova list | grep controller" | awk -F'|' '{print $7}' | cut -c11- | tr -d '[:space:]'
      register: controller_ip
      
    - name: Create file to access controller
      copy:
        dest: "{{ ansible_env.HOME }}/hosts"
        content: |
          [routervm]
          {{ ansible_default_ipv4.address }} ansible_user=noiro

          
          [undercloud]
          {{ undercloud_ip }} ansible_user={{ user }} ansible_password={{ undercloud_password }}
          
          [controller]
          {{ controller_ip['stdout_lines'][0] }}  ansible_user=heat-admin

    - stat:
        path: "{{ id_rsa_file }}"
      register: file

    - name: Check needed OS tools exist
      shell: which sshpass ssh-keygen ssh-copy-id
      register: os_tools_exist

    - name: Generating SSH key pair
      shell: yes | ssh-keygen -q -t rsa -N "" -f "{{ id_rsa_file }}"
      when:
        - file.stat.exists == false and os_tools_exist

    - debug:
        msg: "Key pair already exists..."
      when: file.stat.exists

    - name: copy public key to remote servers
      shell: sshpass -p "{{ undercloud_password }}" ssh-copy-id -f -i "{{ id_rsa_file }}" -o StrictHostKeyChecking=no "{{ user }}"@"{{ item }}"
      with_items:
        - "{{ undercloud_ip }}"

